@model IEnumerable<CustomerProject.Models.Customer>   /*says this is a collection of customer instances*/
    
    @{
        ViewBag.Title = "Index";                        /*object you get with Microsoft MVC--like a global variable similar to object in JavaScript--create new key called title and call it index */
    }

    <h2>Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create")      @*//*turns into an anchor tag that turns into a route */*@
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sales)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Active)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateCreated)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Sales)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Active)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateCreated)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |                   @*/*action link turns into anchor tag */*@
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }

    </table>
